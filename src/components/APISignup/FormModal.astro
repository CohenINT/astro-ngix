---
// src/components/FormModal.astro
// Props for the modal component
interface Props {
    id: string;                   // Unique ID for the modal
    title: string;                // Modal title
    buttonText?: string;          // Text for the trigger button (optional)
    buttonClass?: string;         // CSS class for the trigger button (optional)
    modalClass?: string;          // Additional CSS class for the modal (optional)
}

const {
    id,
    title,
    buttonText = "Open Form",
    buttonClass = "modal-trigger-btn",
    modalClass = ""
} = Astro.props;
---

<div class="modal-container">
    <!-- Trigger button for the modal -->
    <button class={buttonClass} id={`${id}-trigger`}>
        {buttonText}
    </button>

    <!-- The modal itself (hidden by default) -->
    <div class={`modal ${modalClass}`} id={id}>
        <div class="modal-backdrop"></div>
        <div class="modal-content">
            <div class="modal-header">
                <h2>{title}</h2>
                <button class="close-button" aria-label="Close modal">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <!-- Modal content - we use <slot> to allow custom content to be passed in -->
                <slot />
            </div>
        </div>
    </div>
</div>

<style>
    /* Modal container */
    .modal-container {
        display: inline-block;
    }

    /* Button styling */
    .modal-trigger-btn {
        padding: 0.6rem 1.2rem;
        background-color: #3b82f6;
        color: white;
        border: none;
        border-radius: 0.375rem;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.15s ease-in-out;
    }

    .modal-trigger-btn:hover {
        background-color: #2563eb;
    }

    /* Modal styling */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000;
    }

    .modal.is-open {
        display: flex;
    }

    .modal-backdrop {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(2px);
    }

    .modal-content {
        position: relative;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 1.5rem;
        border-radius: 0.5rem;
        width: 90%;
        max-width: 500px;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 0.75rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .modal-header h2 {
        margin: 0;
        font-size: 1.5rem;
        color: #1f2937;
    }

    .close-button {
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #6b7280;
        padding: 0.25rem;
        line-height: 1;
    }

    .close-button:hover {
        color: #1f2937;
    }

    .modal-body {
        margin-top: 1rem;
    }

    @media (max-width: 640px) {
        .modal-content {
            width: 95%;
            padding: 1rem;
        }
    }
</style>

<script define:vars={{ id }}>
    // Get elements
    const modal = document.getElementById(id);
    const trigger = document.getElementById(`${id}-trigger`);
    const closeButton = modal.querySelector('.close-button');
    const backdrop = modal.querySelector('.modal-backdrop');

    // Function to open modal
    function openModal() {
        modal.classList.add('is-open');
        document.body.style.overflow = 'hidden'; // Prevent scrolling when modal is open
    }

    // Function to close modal
    function closeModal() {
        modal.classList.remove('is-open');
        document.body.style.overflow = '';
    }

    // Event listeners
    trigger.addEventListener('click', openModal);
    closeButton.addEventListener('click', closeModal);
    backdrop.addEventListener('click', closeModal);

    // Close modal when ESC key is pressed
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modal.classList.contains('is-open')) {
            closeModal();
        }
    });
</script>